// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @db.Uuid
  name String @db.VarChar(150)
  email String @unique
  password String
  role Roles @default(USER)
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt

  borrows Borrow[]

  @@map("users")
}

model Book {
  id String @id @default(uuid()) @db.Uuid
  title String
  author String @db.VarChar(150)
  isbn String @unique
  quantity Int @default(1)
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt

  borrows Borrow[]

  @@map("books")
}

model Borrow {
  id String @id @default(uuid()) @db.Uuid
  userId String @db.Uuid
  bookId String @db.Uuid
  borrowDate DateTime @default(now()) @db.Timestamp()
  returnDate DateTime? @db.Timestamp()

  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])


  @@map("borrows")
}

enum Roles {
  ADMIN
  USER
  MODERATOR
}